<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="DateTimePicker" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\System\DateTimePicker.ico;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="MessageBox_ShowCore_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="MessageBox_ShowCore_Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="MessageBox_ShowCore_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="MessageBox_ShowCore_No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="MessageBox_ShowCore_Reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="MessageBox_ShowCore_Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="MessageBox_ShowCore_Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Application_Init_Directory_does_not_exist" xml:space="preserve">
    <value>=》Directory does not exist</value>
  </data>
  <data name="Application_Init_Here you can customize or adjust the control style" xml:space="preserve">
    <value>/* Here you can customize or adjust the control style */ </value>
  </data>
  <data name="Application_Init_Define control style" xml:space="preserve">
    <value>Define control style</value>
  </data>
  <data name="Application_Init_Whether to follow the system theme by default" xml:space="preserve">
    <value>/*Whether to follow the system theme by default*/</value>
  </data>
  <data name="Application_Init_Whether to apply built-in styles" xml:space="preserve">
    <value>/*Whether to apply built-in styles*/</value>
  </data>
  <data name="Application_Init_Specify the theme, valid when AutoTheme is false" xml:space="preserve">
    <value>/*Specify the theme, valid when AutoTheme=false*/</value>
  </data>
  <data name="Application_Init_Whether to use a custom theme, corresponding to custom theme" xml:space="preserve">
    <value>/*Whether to use a custom theme, corresponding to [custom theme]*/</value>
  </data>
  <data name="Application_Init_Whether to use custom style, corresponding to [custom style]" xml:space="preserve">
    <value>/*Whether to use custom style, corresponding to [custom style]*/</value>
  </data>
  <data name="Application_Init_Custom theme name" xml:space="preserve">
    <value>/* Custom theme name */</value>
  </data>
  <data name="Application_Init_The folder where the theme files are located" xml:space="preserve">
    <value>/* The folder where the theme files are located */</value>
  </data>
  <data name="Application_Init_css file path" xml:space="preserve">
    <value>/* css file path */</value>
  </data>
  <data name="Application_Init_Freely defined style files" xml:space="preserve">
    <value>/* Freely defined style files */</value>
  </data>
  <data name="FormBase_FormBase_Close_" xml:space="preserve">
    <value>You are closing this window, are you sure you want to close it?</value>
  </data>
  <data name="ColorDialog_RunDialog_Choose color" xml:space="preserve">
    <value>Choose color</value>
  </data>
  <data name="PrintDialog_RunPrint_File is in use and cannot be overwritten" xml:space="preserve">
    <value>File is in use and cannot be overwritten</value>
  </data>
  <data name="DateTimePicker_DateTimePicker_Mask" xml:space="preserve">
    <value>____year__month__day</value>
  </data>
  <data name="DateTimePicker_DateTimePicker_Choose Today" xml:space="preserve">
    <value>Choose Today </value>
  </data>
  <data name="DateTimePicker_Calendar_DaySelected_Choose" xml:space="preserve">
    <value>The selected date is outside the restricted range \nMaximum time: {0}\nMinimum time: {1}</value>
  </data>
  <data name="DateTimePicker_Calendar_DaySelected_Date restrictions" xml:space="preserve">
    <value>Date restrictions</value>
  </data>
  <data name="DateTimePicker_Value_yyyy年MM月dd日" xml:space="preserve">
    <value>MM month dd day yyyy year</value>
  </data>
  <data name="FileDialog_RunDialog_Select_File" xml:space="preserve">
    <value>Select File</value>
  </data>
  <data name="FileDialog_RunDialog_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="FileDialog_RunDialog_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="FontDialog_RunDialog_Select_Font" xml:space="preserve">
    <value>Select Font</value>
  </data>
</root>